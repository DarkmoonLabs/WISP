<?xml version="1.0"?>
<configuration>
  <configSections>
    <!--Don't remove any of these lines unless you are also removing the associated sections below in this file-->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <section name="ServerCommands" type="Shared.CommandConfigSection, ServerLib"/>
    <section name="PerformanceCounters" type="Shared.PerfConfig, ServerLib"/>
    <section name="OutgoingConnections" type="Shared.ConnectionConfigSection, ServerLib"/>
    <section name="membase" type="Membase.Configuration.MembaseClientSection, Membase"/>
    <sectionGroup name="enyim.com">
      <section name="memcached" type="Enyim.Caching.Configuration.MemcachedClientSection, Enyim.Caching"/>
    </sectionGroup>
  </configSections>

  <connectionStrings>
    <!--This is the connection string for the Lobby Session data-->
    <add name="SessionDataConnectionString" connectionString="Data Source=SQLSERVERADDRESS;User Id=USERID;Password=PASSWORD;Initial Catalog=Session;"/>
    <!--This is the connection string for the USER data-->
    <add name="AccountDataConnectionString" connectionString="Data Source=SQLSERVERADDRESS;User Id=USERID;Password=PASSWORD;Initial Catalog=WispUsers;"/>
    <!--This is the connection string for the GAME data-->
    <add name="GameDataConnectionString" connectionString="Data Source=SQLSERVERADDRESS;User Id=USERID;Password=PASSWORD;Initial Catalog=Game;"/>
    <!--This is the connection string for the Session data-->
    <add name="LobbyDataConnectionString" connectionString="Data Source=SQLSERVERADDRESS;User Id=USERID;Password=PASSWORD;Initial Catalog=Session;"/>
  </connectionStrings>

  <!--
      If your server needs DIRECT access to the account & profile data stored in the database (DataConnectionString, above) then you need the following <system.web> section.  Normally,
      The LoginServer pulls this data out of the user database and passes it around when players get handed off.  That's not to say, however, that you couldn't
      access the data directly, if you wanted to.
  -->
  <system.web>

    <roleManager enabled="true" defaultProvider="CustomizedRoleProvider">
      <providers>
        <add name="CustomizedRoleProvider" type="System.Web.Security.SqlRoleProvider" connectionStringName="DataConnectionString" applicationName="/Wisp"/>
      </providers>
    </roleManager>

    <membership defaultProvider="CustomizedMembershipProvider">
      <providers>
        <add name="CustomizedMembershipProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="DataConnectionString" applicationName="/Wisp" minRequiredPasswordLength="4" requiresQuestionAndAnswer="false" requiresUniqueEmail="true" maxInvalidPasswordAttempts="2147483647" minRequiredNonalphanumericCharacters="0"/>
      </providers>
    </membership>

    <profile defaultProvider="ConfiguredProfileProvider">
      <providers>
        <clear/>
        <add connectionStringName="DataConnectionString" applicationName="/Wisp" description="" name="AspNetSqlProvider" type="System.Web.Profile.SqlProfileProvider, System.Web, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>

        <add name="ConfiguredProfileProvider" type="Shared.SqlTableProfileProvider, ServerLib" connectionStringName="DataConnectionString" table="aspnet_CustomProfile" applicationName="/Wisp"/>
      </providers>

      <properties>
        <add name="LoginHistoryIP" type="string" defaultValue="[null]" customProviderData="LoginHistoryIP;nvarchar"/>
        <add name="LoginHistoryTime" type="string" defaultValue="[null]" customProviderData="LoginHistoryTime;nvarchar"/>
        <add name="LogoffHistoryTime" type="string" defaultValue="[null]" customProviderData="LogoffHistoryTime;nvarchar"/>
        <add name="MaxCharacters" type="int" defaultValue="1" customProviderData="MaxCharacters;int"/>
        <add name="Suspension release" type="DateTime" defaultValue="[null]" customProviderData="SuspensionRelease;datetime"/>
        <add name="Total time on Account" type="long" defaultValue="[null]" customProviderData="TotalTimeOnAccount;bigint"/>
      </properties>
    </profile>

  </system.web>

  <!-- 
       Here you define any server commands that either you want to invoke directly, or via the Zeus admin panel.
       See the documentation or details on setting up commands.
  -->
  <ServerCommands>
    <Commands>
      <add CommandName="Sample Command" CommandGroup="Server" AllowedRoles="Administrator" Assembly="YourExecutableName.exe" ClassName="LobbyBeholder.Commands" MethodName="ExampleCommand" ParmNames="" UsageHelp="Test command that prints a log message."/>
    </Commands>
  </ServerCommands>
  
  <!--
      Performance counters are monitored via the Zeus control panel.  You can add or remove available counters here.
      See the documentation on details about setting up additional Performance counters.
  -->
  <PerformanceCounters>
    <Counters>
      <add CounterName="% Processor Time" CounterGroup="Process" InstanceName="ProcessName" MaxSamplesInHistory="120" SampleIntervalSecs="2" IsCustom="False" Help="Server CPU % Usage"/>
      <add CounterName="Thread Count" CounterGroup="Process" InstanceName="ProcessName" MaxSamplesInHistory="120" SampleIntervalSecs="3" IsCustom="False" Help="Server Thread Count"/>
      <add CounterName="Private Bytes" CounterGroup="Process" InstanceName="ProcessName" MaxSamplesInHistory="120" SampleIntervalSecs="5" IsCustom="False" Help="Server Total Memory Used (MB)" Divisor="1048576"/>
      <add CounterName="# Bytes in all Heaps" CounterGroup=".NET CLR Memory" InstanceName="ProcessName" MaxSamplesInHistory="120" SampleIntervalSecs="5" IsCustom="False" Help="Server Managed Memory Used (MB)" Divisor="1048576"/>
      <add CounterName="Available MBytes" CounterGroup="Memory" InstanceName="" MaxSamplesInHistory="120" SampleIntervalSecs="5" IsCustom="False" Help="Machine Memory Available (MB)"/>
      <add CounterName="Contention Rate / sec" CounterGroup=".NET CLR LocksAndThreads" InstanceName="ProcessName" MaxSamplesInHistory="120" SampleIntervalSecs="3" IsCustom="False" Help="Server Thread Sync Contentions / sec"/>

      <add PerformanceCounterType="RateOfCountsPerSecond32" CounterName="Packets Out" InstanceName="" MaxSamplesInHistory="120" SampleIntervalSecs="3" IsCustom="True" Help="Packet sent / sec"/>
      <add PerformanceCounterType="RateOfCountsPerSecond32" CounterName="Packets In" InstanceName="" MaxSamplesInHistory="120" SampleIntervalSecs="3" IsCustom="True" Help="Packets received / sec"/>
      <add PerformanceCounterType="NumberOfItems32" CounterName="Live Connections" InstanceName="" MaxSamplesInHistory="120" SampleIntervalSecs="5" IsCustom="True" Help="# of sockets connected"/>
      <add PerformanceCounterType="RateOfCountsPerSecond32" CounterName="Bandwidth Out" InstanceName="" MaxSamplesInHistory="120" SampleIntervalSecs="3" IsCustom="True" Help="KB Sent / sec" Divisor="1024"/>
      <add PerformanceCounterType="RateOfCountsPerSecond32" CounterName="Bandwidth In" InstanceName="" MaxSamplesInHistory="120" SampleIntervalSecs="3" IsCustom="True" Help="KB Received / sec" Divisor="1024"/>
    </Counters>
  </PerformanceCounters>

  <!--
      This section controls the logging behavior of the service.
  -->
  <log4net debug="false">
   
    <appender name="BufferingForwardingAppender" type="log4net.Appender.BufferingForwardingAppender">
      <bufferSize value="100"/>
      <appender-ref ref="ConsoleAppender"/>
    </appender>

    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
    </appender>

    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <applicationName value="Wisp"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%utcdate [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
    </appender>

    <appender name="FileAppender" type="log4net.Appender.FileAppender">
      <file value="log-file.txt"/>
      <appendToFile value="true"/>
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%utcdate [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
    </appender>

    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="wisplog.txt"/>
      <countDirection value="1"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="-1"/>
      <maximumFileSize value="5MB"/>
      <staticLogFileName value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%utcdate %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
    </appender>

    <appender name="SmtpAppender" type="log4net.Appender.SmtpAppender">
      <to value="to@domain.com"/>
      <from value="from@domain.com"/>
      <subject value="test logging message"/>
      <smtpHost value="SMTPServer.domain.com"/>
      <bufferSize value="512"/>
      <lossy value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%newline%utcdate [%thread] %-5level %logger [%property{NDC}] - %message%newline%newline%newline"/>
      </layout>
    </appender>

    <appender name="UdpAppender" type="log4net.Appender.UdpAppender">
      <localPort value="8080"/>
      <remoteAddress value="224.0.0.1"/>
      <remotePort value="8080"/>
      <layout type="log4net.Layout.PatternLayout, log4net">
        <conversionPattern value="%-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
    </appender>

    <appender name="TraceAppender" type="log4net.Appender.TraceAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%utcdate %-5level %logger - %message%newline"/>
      </layout>
    </appender>

    <appender name="MemoryAppender" type="Shared.LimitedMemoryLogAppender">
      <MaxLogEntriesToKeep value="250"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%utcdate %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
    </appender>

    <root>
      <priority value="ALL"/>
      <appender-ref ref="TraceAppender"/>
      <appender-ref ref="RollingFileAppender"/>
      <appender-ref ref="MemoryAppender"/>
    </root>

  </log4net>

  <!--
      Memcached & Membase support settings, both provided by the enyim client library.
      See complete config at 
      https://github.com/enyim/EnyimMemcached/wiki/MembaseClient-Configuration
      https://github.com/enyim/EnyimMemcached/wiki/MemcachedClient-Configuration
  -->
  <membase>
    <servers>
      <add uri="http://servername:8091/pools/default"/>
    </servers>
    <transcoder type="ServerLib.WispMemCacheTranscoder, ServerLib"/>
  </membase>

  <enyim.com>
    <!-- make sure you use the same ordering of nodes in every configuration you have -->    
    <memcached protocol="Binary">
      <servers>
        <add address="servername" port="11211"/>
      </servers>
      <transcoder type="ServerLib.WispMemCacheTranscoder, ServerLib"/>
    </memcached>
  </enyim.com>

  <OutgoingConnections UpdateIntervalSecs="20">
    <ServerGroups>
      <Group ID="North" ConnectMode="all" SharedHiveKey="F0C332C9-B20B-4b14-AF35-C8C329F81910">
        <Servers>
          <Server ConnectionName="AVALON" Address="AVALON" Port="4503" ServiceID="8"/>
        </Servers>
      </Group>
    </ServerGroups>
  </OutgoingConnections>

  <!--
      Standard Wisp app settings.
  -->
  <appSettings>
    <!-- Networking socket send mode.  Blocking is faster but supports fewer clients. -->
    <add key="BlockingMode" value="FALSE"/>

    <!-- When a character is loaded by the server, it gets stored in the cache.  The character will expire from the cache after this many minutes. 5 minutes is the default.  -->
    <add key="CharacterCacheExpirationIntervalMins" value="10"/>

    <!-- When a connection is made, the two connections sync their "network clocks".  This sync happens over a number of miliseconds.  This is that number. 15000 is the default. -->
    <add key="ClockSyncTimeAllowed" value="15000"/>

    <!-- Maximum number of sockets the server will allow.  -->
    <add key="ConnectionLimit" value="1000"/>

    <!-- The provider of the distributed cache service to use.  Valid values are MemCache, MemBase and None. Default is None. -->
    <add key="DCacheProvider" value="None"/>

    <!-- TRUE, which will turn off the TCP algorithm that is partly responsible for the throttling behavior in high packet loss scenarios. Check of "Nagel's Algorithm" on google for details. Default is FALSE. -->
    <add key="DisableTCPDelay" value="FALSE"/>

    <!-- Enables periodic (NatPokeInterval) UDP keep alive messages which is needed to punch a whole in the NAT so that UDP packets from the opposite end of the connection can come through. Default is TRUE-->
    <add key="EnableUDPKeepAlive" value="TRUE"/>

    <!-- The port to use for incoming connection. -->
    <add key="ListenOnPort" value="1"/>

    <!-- Maximum incoming connection backlog to keep.  Default is 100.  -->
    <add key="MaxConnectionBacklog" value="100"/>

    <!-- The account profile manager persists information about X number of login sessions (time, duration, IP address, etc).  This is the number of sessions to store. -->
    <add key="MaxLoginSessionsToStore" value="10"/>

    <!-- I/O completion port config. Maximum number of simultaneous socket connections that can be made.  This will affect the amount of networking memory buffer allocated on the server. Default is 5.-->
    <add key="MaxSimultaneousNetworkAcceptOps" value="5"/>

    <!-- I/O completion port config. Maximum number of simultaneous UDP socket reads that can be made.  This will affect the amount of networking memory buffer allocated on the server.  Default is 10.  -->
    <add key="MaxSimultaneousUDPReads" value="10"/>

    <!-- The minimum number of characters that a new account can create.  Default is 1.  Minimum is 1. -->
    <add key="MinimumCharactersAllowed" value="1"/>

    <!-- The number of seconds between UDP NAT hole punch messages.  Minimum is 20.  Default is 20. -->
    <add key="NatPokeInterval" value="20"/>

    <!-- The number of bytes to reserve per network operation.  Default is 1024.  This affects the total networking buffer allocated.  Set it too high and you're wasting memory.  Set it too low and you will get lots of fragmented packets, slowing down your server. -->
    <add key="NetworkBufferSize" value="1024"/>

    <!-- The number of network clock time samples to send across ClockSyncTimeAllowed seconds to synch up the network clock between two connections.  Default is 10.-->
    <add key="NumSamplesForClockSync" value="10"/>

    <!-- Valid values are None and Database.  Set to None if you do not wish to authenticate players - everyone will be able to log on. Temporary ServerUser and Character objects willb e furnished to all players. Default is None. -->
    <add key="PlayerAuthenticationType" value="None"/>

    <!-- Players are issued authentication tickets when they log in. This is the number of seconds between actually expiring old tickets.  Default is 15. In other words, this is the number of seconds that an auth ticket could be valid (in worst case scenario) beyond its actual expiration time. -->
    <add key="PlayerAuthticketExpirationCheckIntervalSecs" value="15"/>

    <!-- Players are issued authentication tickets when they log in. This is the number of seconds after which that ticket expires. Default is 300. -->
    <add key="PlayerAuthticketExpirationSecs" value="300"/>

    <!-- The number of seconds that can go by without any network activity from the client before dumping the connection. NAT punch packets don't count as "activity" in that regard. Default is 60. -->
    <add key="PlayerConnectionTimeout" value="60"/>

    <!-- 
    Recommended to set this on the client only.
    If true, packets are processed as they are received, which is always an asyncronous action.  In some clients this can cause a problem,
    particularly in tightly looped 3d game clients.  For tightly looped clients, it is generally recommended that this setting be set to "False"
    and then to call the "Connection.ProcessNetworking" method when you are ready to process networking messages in your game loop. For all other types of clients, such
    as Silverlight clients for instance, processing immediately should not present any problems. 
    -->
    <add key="ProcessPacketsImmediately" value="TRUE"/>

    <!-- Every physical machine that received Silverlight socket connections must have exactly one Silverlight Policy Server running. Default is FALSE.-->
    <add key="RunSilverlightPolicyServer" value="FALSE"/>

    <!-- Friendly name of this server. Used in logs, client UI, etc. -->
    <add key="ServerName" value="Beholder"/>

    <!-- Unique server ID used to identify this particular instance in code.  No two servers with the same ServerUserID can be connected to another server.  This value may be modified by the process itself, especially if run in a cloud type environment. -->
    <add key="ServerUserID" value="Beholder-1"/>

    <!-- When server within the same Hive connect to one another, their shared cluster keys must match in order for login to be granted. This value can be any string.  -->
    <add key="SharedKeyWithClusterServers" value="F0C332C9-B20B-4b14-AF35-C8C329F81910"/>

    <!-- The Stat Manager loads the definition of all Stats used in your game from this file.  List the filename only. The file must reside in the same directory as the executing assembly.  -->
    <add key="StatDefinitionFile" value="Stats.xml"/>

    <!-- On startup, a server will try to read the Character template file. This may not be appropriate for some server types.  Supress the loading of that file with this switch. Default is FALSE. -->
    <add key="SupressCharacterLoad" value="TRUE"/>

    <!-- On startup, a server will try to read the game Stat definition file. This may not be appropriate for some server types.  Supress the loading of that file with this switch. Default is FALSE. -->
    <add key="SupressStatLoad" value="TRUE"/>

    <!-- All connections can synchronize their network clocks with the target connections.  This switch can disable that synch.  Default is TRUE.  -->
    <add key="SynchronizeClockWithServer" value="FALSE"/>

    <!-- Every once in a while, we re-synch network clocks to update the connection latency values.  This is the number of seconds between those synchs. 0 means only synch it once, which is the default. Time is in miliseconds.-->
    <add key="TimeBetweenClockSync" value="0"/>

    <!-- Does your game use characters?  Default is FALSE. This switch turns on/off all character related functionality. -->
    <add key="UseCharacters" value="FALSE"/>

    <!-- Enable IPv6 networking.  IPv4 will always be enabled, even if this is set to true. Default is FALSE. -->
    <add key="UseIPv6" value="FALSE"/>


  </appSettings>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.1"/></startup></configuration>
